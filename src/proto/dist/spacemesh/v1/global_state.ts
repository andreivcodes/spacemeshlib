// @generated by protobuf-ts 2.8.1
// @generated from protobuf file "spacemesh/v1/global_state.proto" (package "spacemesh.v1", syntax proto3)
// tslint:disable
import { GlobalStateStreamResponse } from "./global_state_types";
import { GlobalStateStreamRequest } from "./global_state_types";
import { AppEventStreamResponse } from "./global_state_types";
import { AppEventStreamRequest } from "./global_state_types";
import { SmesherRewardStreamResponse } from "./global_state_types";
import { SmesherRewardStreamRequest } from "./global_state_types";
import { AccountDataStreamResponse } from "./global_state_types";
import { AccountDataStreamRequest } from "./global_state_types";
import { SmesherDataQueryResponse } from "./global_state_types";
import { SmesherDataQueryRequest } from "./global_state_types";
import { AccountDataQueryResponse } from "./global_state_types";
import { AccountDataQueryRequest } from "./global_state_types";
import { AccountResponse } from "./global_state_types";
import { AccountRequest } from "./global_state_types";
import { GlobalStateHashResponse } from "./global_state_types";
import { GlobalStateHashRequest } from "./global_state_types";
import { ServiceType } from "@protobuf-ts/runtime-rpc";
/**
 * @generated ServiceType for protobuf service spacemesh.v1.GlobalStateService
 */
export const GlobalStateService = new ServiceType("spacemesh.v1.GlobalStateService", [
    { name: "GlobalStateHash", options: {}, I: GlobalStateHashRequest, O: GlobalStateHashResponse },
    { name: "Account", options: {}, I: AccountRequest, O: AccountResponse },
    { name: "AccountDataQuery", options: {}, I: AccountDataQueryRequest, O: AccountDataQueryResponse },
    { name: "SmesherDataQuery", options: {}, I: SmesherDataQueryRequest, O: SmesherDataQueryResponse },
    { name: "AccountDataStream", serverStreaming: true, options: {}, I: AccountDataStreamRequest, O: AccountDataStreamResponse },
    { name: "SmesherRewardStream", serverStreaming: true, options: {}, I: SmesherRewardStreamRequest, O: SmesherRewardStreamResponse },
    { name: "AppEventStream", serverStreaming: true, options: {}, I: AppEventStreamRequest, O: AppEventStreamResponse },
    { name: "GlobalStateStream", serverStreaming: true, options: {}, I: GlobalStateStreamRequest, O: GlobalStateStreamResponse }
]);
