// @generated by protobuf-ts 2.8.1
// @generated from protobuf file "spacemesh/v1/smesher.proto" (package "spacemesh.v1", syntax proto3)
// tslint:disable
import { PostConfigResponse } from "./smesher_types";
import { PostSetupComputeProvidersResponse } from "./smesher_types";
import { PostSetupComputeProvidersRequest } from "./smesher_types";
import { PostSetupStatusStreamResponse } from "./smesher_types";
import { PostSetupStatusResponse } from "./smesher_types";
import { EstimatedRewardsResponse } from "./smesher_types";
import { EstimatedRewardsRequest } from "./smesher_types";
import { SetMinGasResponse } from "./smesher_types";
import { SetMinGasRequest } from "./smesher_types";
import { MinGasResponse } from "./smesher_types";
import { SetCoinbaseResponse } from "./smesher_types";
import { SetCoinbaseRequest } from "./smesher_types";
import { CoinbaseResponse } from "./smesher_types";
import { SmesherIDResponse } from "./smesher_types";
import { StopSmeshingResponse } from "./smesher_types";
import { StopSmeshingRequest } from "./smesher_types";
import { StartSmeshingResponse } from "./smesher_types";
import { StartSmeshingRequest } from "./smesher_types";
import { IsSmeshingResponse } from "./smesher_types";
import { Empty } from "../../google/protobuf/empty";
import { ServiceType } from "@protobuf-ts/runtime-rpc";
/**
 * @generated ServiceType for protobuf service spacemesh.v1.SmesherService
 */
export const SmesherService = new ServiceType("spacemesh.v1.SmesherService", [
    { name: "IsSmeshing", options: {}, I: Empty, O: IsSmeshingResponse },
    { name: "StartSmeshing", options: {}, I: StartSmeshingRequest, O: StartSmeshingResponse },
    { name: "StopSmeshing", options: {}, I: StopSmeshingRequest, O: StopSmeshingResponse },
    { name: "SmesherID", options: {}, I: Empty, O: SmesherIDResponse },
    { name: "Coinbase", options: {}, I: Empty, O: CoinbaseResponse },
    { name: "SetCoinbase", options: {}, I: SetCoinbaseRequest, O: SetCoinbaseResponse },
    { name: "MinGas", options: {}, I: Empty, O: MinGasResponse },
    { name: "SetMinGas", options: {}, I: SetMinGasRequest, O: SetMinGasResponse },
    { name: "EstimatedRewards", options: {}, I: EstimatedRewardsRequest, O: EstimatedRewardsResponse },
    { name: "PostSetupStatus", options: {}, I: Empty, O: PostSetupStatusResponse },
    { name: "PostSetupStatusStream", serverStreaming: true, options: {}, I: Empty, O: PostSetupStatusStreamResponse },
    { name: "PostSetupComputeProviders", options: {}, I: PostSetupComputeProvidersRequest, O: PostSetupComputeProvidersResponse },
    { name: "PostConfig", options: {}, I: Empty, O: PostConfigResponse }
]);
